---
layout: base
---

<div id="rainbow"></div>

<section class="splash">
  <div class="splash__earth-container">
    <div id="earth"></div>
  </div>
  <h1 class="splash__title">Creature World</h1>
  <p class="splash__welcome">Welcome to The Creature World. You have arrived in a nearby magical dimension of love, divine intervention, and possibility.</p>
  <nav class="splash__links">
  {% for link in links %}
    <a class="splash__link splash__link--{{ link.title | lower }}" href="{{ link.url }}" target="_blank">{{ link.title }}</a>
  {% endfor %}
  </nav>
</section>

<section class="timeline">
  <h2 class="timeline__title">Journey Thus Far</h2>
  {% for event in timeline %}
  <div class="event">
    <div class="event__marker"></div>
    <div class="event__line"></div>
    <h3 class="event__title">{{ event.title }}</h3>
    <h5 class="event__time">{{ event.date }}</h5>
    <p class="event__body">{{ event.body | striptags(true) | replace('{', '<a href="' + event.linkUrl + '" target="_blank">') | replace('}', '</a>') | nl2br | safe }}</p>
  </div>
  {% endfor %}
</section>

<section class="team">
  <h2 class="team__title">The Team</h2>
  <div class="team__container">
    {% for teammate in team %}
    <div class="teammate">
      <div class="teammate__avatar">
        <img class="teammate__avatar__image" src="/img/{{ teammate.creature }}.jpg" />
        <img class="teammate__avatar__eyes" src="/img/{{ teammate.creature }}-eyes.jpg" />
      </div>
      <div class="teammate__info">
        <h3 class="teammate__name">{{ teammate.name }}</h3>
        <h5 class="teammate__role">{{ teammate.role }}</h5>
        <a class="teammate__twitter" href="//twitter.com/{{ teammate.twitter }}" target="_blank">@{{ teammate.twitter }}</a>
      </div>
    </div>
    {% endfor %}
  </div>
</section>

<section class="faq">
  <h2 class="faq__title">FAQ</h2>
  {% for qa in faq %}
  <div class="qa">
    <h3>{{ qa.question }}</h3>
    <p>{{ qa.answer }}</p>
  </div>
  {% endfor %}
</section>

<section class="footer">
  <h2 class="footer__title">Enjoy your stay.</h2>
</section>

<script>
window.addEventListener('load', function() {
  const script = document.createElement('script');
  script.src = '/lib/miniature.earth.js';
  document.body.appendChild(script);	
});

window.addEventListener('earthjsload', function() {
  const myearth = new Earth('earth', {
    location: { lat: 10, lng: -80 },
    light: 'none',
    mapSeaColor: '#1e4497',
    mapLandColor: '#819647',
    autoRotate: true,
    autoRotateDelay: 0,
    autoRotateStart: 0,
  });    
});

const lerp = (x, y, a) => x * (1 - a) + y * a;
const easeInExpo = (x) => x === 0 ? 0 : Math.pow(2, 10 * x - 10);
const easeInCirc = (x) => 1 - Math.sqrt(1 - Math.pow(x, 2));

const scales = [...Array(101)].map((_, i) => ({
  x: lerp(0.05, 1, easeInCirc(i / 100)),
  y: lerp(0.5, 1, easeInExpo(i / 100)),
}));

let lastKnownScrollPosition = 0;
let ticking = false;

function doSomething(scrollPos) {
  const docHeight = document.body.offsetHeight;
  const winHeight = window.innerHeight;
  const scrollPercent = scrollPos / (docHeight - winHeight);
  const {x, y} = scales[Math.round(scrollPercent * 100)];
  document.querySelector('#rainbow').style.transform = `scale(${x}, ${y})`;
}

document.addEventListener('scroll', function(e) {
  lastKnownScrollPosition = window.scrollY;
  if (!ticking) {
    window.requestAnimationFrame(function() {
      doSomething(lastKnownScrollPosition);
      ticking = false;
    });
    ticking = true;
  }
});
</script>